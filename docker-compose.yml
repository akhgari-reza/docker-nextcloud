version: "3"

#services definition
services:

  # Nextcloud **********
  # Nextcloud is a suite of client-server software for creating and using file hosting services. Nextcloud provides
  # functionality similar to Dropbox, Office 365 or Google Drive when used with integrated office suites Collabora
  # Online or OnlyOffice. It can be hosted in the cloud or on-premises.
  app:
    image: nextcloud:27.0.2-apache
    container_name: nextcloud-app
    volumes:
      - nextcloud:/var/www/html
      - ./app/config:/var/www/html/config
      - ./app/custom_apps:/var/www/html/custom_apps
      - ./app/data:/var/www/html/data
      - ./app/themes:/var/www/html/themes
      - /etc/localtime:/etc/localtime:ro
    networks:
      - nextcloud_networks
    depends_on:
      - db
      - letsencrypt-companion
      - proxy
    entrypoint:
      - VIRTUAL_HOST= 192.168.43.140
      - LETSENCRYPT_HOST= 192.168.43.140
      - LETSENCRYPT_EMAIL= rakhgari@gmail.com
      - MYSQL_HOST=db
    restart: unless-stopped


  # MariaDB ***********
  db:
    image: mariadb:10.6
    container_name: mariadb
    command: --transaction-isolation=READ-COMMITTED --log-bin=binlog --binlog-format=ROW
    restart: unless-stopped
    networks:
      - nextcloud_networks
    volumes:
      - db:/var/lib/mysql
      - /etc/localtime:/etc/localtime:ro
    environment:
      - MYSQL_ROOT_PASSWORD=123
      - MYSQL_PASSWORD=456
      - MYSQL_DATABASE=nextcloud
      - MYSQL_USER=nextcloud
      - MARIADB_AUTO_UPGRADE=1
      - MARIADB_DISABLE_UPGRADE_BACKUP=1
    env_file:
      - db.env


  # Let's Encrypt ***********
  # Let's Encrypt is a global Certificate Authority (CA). We let people and organizations around the world obtain,
  # renew, and manage SSL/TLS certificates. Our certificates can be used by websites to enable secure HTTPS
  # connections. Let's Encrypt offers Domain Validation (DV) certificates.
  letsencrypt-companion:
    image: jrcs/letsencrypt-nginx-proxy-companion
    container_name: nextcloud-letsencrypt
    restart: unless-stopped
    volumes:
      - ./proxy/certs:/etc/nginx/certs:ro
      - ./proxy/html:/usr/share/nginx/html:rw
      - ./proxy/vhost.d:/etc/nginx/vhost.d:rw
      - ./proxy/conf.d:/etc/nginx/conf.d:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - nextcloud_networks
    depends_on:
      - proxy


  # Nginx reverse proxy **********
  # A reverse proxy server is a type of proxy server that typically sits behind the firewall in a private network
  # and directs client requests to the appropriate backend server. A reverse proxy provides an additional level of
  # abstraction and control to ensure the smooth flow of network traffic between clients and servers.
  proxy:
    image: jwilder/nginx-proxy:alpine-0.7.0
    container_name: nextcloud-proxy
    restart: unless-stopped
    volumes:
      - ./proxy/certs:/etc/nginx/certs:rw
      - ./proxy/html:/usr/share/nginx/html:rw
      - ./proxy/vhost.d:/etc/nginx/vhost.d:rw
      - /etc/localtime:/etc/localtime:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro
    networks:
      - nextcloud_networks
                      # When mapping ports in the HOST:CONTAINER format, it is recommended always explicitly
                      # specifying your port mappings as strings.
    ports:
      - "80:80"
      - "443:443"


#volumes definition
volumes:
  nextcloud:
  db:


#network definition
networks:
  nextcloud_networks: